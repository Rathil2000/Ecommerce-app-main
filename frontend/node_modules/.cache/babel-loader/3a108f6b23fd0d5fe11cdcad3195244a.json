{"ast":null,"code":"import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { cartReducer } from \"./Reducers/cartReducer\";\nimport { productListReducer, productDetailsReducer } from \"./Reducers/productReducer\";\nimport { userLoginReducer, userSignupReducer, userProfileReducer, userUpdateProfileReducer } from \"./Reducers/userReducer\";\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from \"./Reducers/orderReducer\";\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst cartItmesFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst paymentMethodFromStorage = localStorage.getItem(\"paymentMethod\") ? JSON.parse(localStorage.getItem(\"paymentMethod\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItmesFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    paymentMethod: paymentMethodFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userSignup: userSignupReducer,\n  userDetails: userProfileReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst store = createStore(reducer, initialState, applyMiddleware(thunk));\nexport default store;","map":{"version":3,"sources":["C:/Users/Dell/Downloads/Ecommerce-app-main/Ecommerce-app-main/frontend/src/redux/store.js"],"names":["combineReducers","createStore","applyMiddleware","thunk","cartReducer","productListReducer","productDetailsReducer","userLoginReducer","userSignupReducer","userProfileReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","userInfoFromStorage","localStorage","getItem","JSON","parse","cartItmesFromStorage","shippingAddressFromStorage","paymentMethodFromStorage","initialState","cart","cartItems","shippingAddress","paymentMethod","userLogin","userInfo","reducer","productList","productDetails","userSignup","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","orderListMy","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SACEC,kBADF,EAEEC,qBAFF,QAGO,2BAHP;AAIA,SACEC,gBADF,EAEEC,iBAFF,EAGEC,kBAHF,EAIEC,wBAJF,QAKO,wBALP;AAMA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,kBAJF,QAKO,yBALP;AAOA,MAAMC,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAGA,MAAMG,oBAAoB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAGA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAGA,MAAMK,wBAAwB,GAAGN,YAAY,CAACC,OAAb,CAAqB,eAArB,IAAsCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CAAtC,GAAwF,EAAzH;AAEA,MAAMM,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEL,oBADP;AAEJM,IAAAA,eAAe,EAAEL,0BAFb;AAGJM,IAAAA,aAAa,EAAEL;AAHX,GADa;AAMnBM,EAAAA,SAAS,EAAE;AAAEC,IAAAA,QAAQ,EAAEd;AAAZ;AANQ,CAArB;AAQA,MAAMe,OAAO,GAAG9B,eAAe,CAAC;AAC9B+B,EAAAA,WAAW,EAAE1B,kBADiB;AAE9B2B,EAAAA,cAAc,EAAE1B,qBAFc;AAG9BkB,EAAAA,IAAI,EAAEpB,WAHwB;AAI9BwB,EAAAA,SAAS,EAAErB,gBAJmB;AAK9B0B,EAAAA,UAAU,EAAEzB,iBALkB;AAM9B0B,EAAAA,WAAW,EAAEzB,kBANiB;AAO9B0B,EAAAA,iBAAiB,EAAEzB,wBAPW;AAQ9B0B,EAAAA,WAAW,EAAEzB,kBARiB;AAS9B0B,EAAAA,YAAY,EAACzB,mBATiB;AAU9B0B,EAAAA,QAAQ,EAACzB,eAVqB;AAW9B0B,EAAAA,WAAW,EAAEzB;AAXiB,CAAD,CAA/B;AAaA,MAAM0B,KAAK,GAAGvC,WAAW,CAAC6B,OAAD,EAAUP,YAAV,EAAwBrB,eAAe,CAACC,KAAD,CAAvC,CAAzB;AAEA,eAAeqC,KAAf","sourcesContent":["import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { cartReducer } from \"./Reducers/cartReducer\";\nimport {\n  productListReducer,\n  productDetailsReducer,\n} from \"./Reducers/productReducer\";\nimport {\n  userLoginReducer,\n  userSignupReducer,\n  userProfileReducer,\n  userUpdateProfileReducer,\n} from \"./Reducers/userReducer\";\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderListMyReducer\n} from \"./Reducers/orderReducer\";\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\nconst cartItmesFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\nconst paymentMethodFromStorage = localStorage.getItem(\"paymentMethod\")?JSON.parse(localStorage.getItem(\"paymentMethod\")):{}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItmesFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    paymentMethod :paymentMethodFromStorage\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userSignup: userSignupReducer,\n  userDetails: userProfileReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails:orderDetailsReducer,\n  orderPay:orderPayReducer,\n  orderListMy: orderListMyReducer,\n});\nconst store = createStore(reducer, initialState, applyMiddleware(thunk));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}