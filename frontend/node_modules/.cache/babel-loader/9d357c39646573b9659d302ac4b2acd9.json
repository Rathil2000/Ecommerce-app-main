{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Downloads\\\\Ecommerce-app-main\\\\Ecommerce-app-main\\\\frontend\\\\src\\\\Screen\\\\ProfileScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Container, Form, Button, Row, Col, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userProfile, userUpdateProfile, listMyOrders } from \"../redux\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport AlertShow from \"../Components/AlertShow\";\nimport Loader from \"../Components/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, SetConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const navigate = useNavigate();\n  const state = useSelector(state => state);\n  const {\n    userInfo\n  } = state.userLogin;\n  const {\n    loading,\n    user,\n    error\n  } = state.userDetails;\n  const {\n    loading: loadingOrders,\n    orders,\n    error: errorOrders\n  } = state.orderListMy;\n  const {\n    success\n  } = state.userUpdateProfile;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!userInfo) {\n      navigate(\"../signin\", {\n        replace: true\n      });\n    } else {\n      if (!user.name) {\n        //First time open the page this condition will be executed\n        dispatch(userProfile());\n        dispatch(listMyOrders());\n      } else {\n        //Second time open the page this condition will be executed\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, user, navigate, userInfo]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    password !== confirmPassword ? setMessage(\"Password and ConfirmPassword do not match\") : dispatch(userUpdateProfile(name, email, password));\n  };\n\n  console.log(state.orderListMy);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-md-center\",\n        children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 23\n        }, this), success && /*#__PURE__*/_jsxDEV(AlertShow, {\n          variant: \"danger\",\n          message: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(AlertShow, {\n          variant: \"danger\",\n          message: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(AlertShow, {\n          variant: \"danger\",\n          message: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Update Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: submitHandler,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Name\",\n                value: name,\n                required: true,\n                onChange: e => {\n                  setName(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"Email\",\n                value: email,\n                required: true,\n                onChange: e => {\n                  setEmail(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"password\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Password\",\n                value: password,\n                required: true,\n                onChange: e => {\n                  setPassword(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"confirmPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Confirm Password\",\n                value: confirmPassword,\n                required: true,\n                onChange: e => {\n                  SetConfirmPassword(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"my-3\",\n              type: \"submit\",\n              variant: \"primary\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 9,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"My orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), loadingOrders ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this) : errorOrders ? /*#__PURE__*/_jsxDEV(AlertShow, {\n            variant: \"danger\",\n            message: errorOrders\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            responsive: true,\n            className: \"table-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"DATE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"TOTAL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"PAID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"DELIVERD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order.createdAt.substring(0, 10)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order.totalPrice\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-times\",\n                    style: {\n                      color: \"red\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order.isDeleverd ? order.deleverdAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-times\",\n                    style: {\n                      color: \"red\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n                    to: `/order/${order._id}`,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"dark\",\n                      children: \"Details\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this)]\n              }, order._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProfileScreen, \"AHiMwVADP1bOHhXtHgubKVRDgXU=\", false, function () {\n  return [useNavigate, useSelector, useDispatch];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/Dell/Downloads/Ecommerce-app-main/Ecommerce-app-main/frontend/src/Screen/ProfileScreen.jsx"],"names":["React","useState","useEffect","Link","useNavigate","Container","Form","Button","Row","Col","Table","useDispatch","useSelector","userProfile","userUpdateProfile","listMyOrders","LinkContainer","AlertShow","Loader","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","SetConfirmPassword","message","setMessage","navigate","state","userInfo","userLogin","loading","user","error","userDetails","loadingOrders","orders","errorOrders","orderListMy","success","dispatch","replace","submitHandler","e","preventDefault","console","log","target","value","map","order","_id","createdAt","substring","totalPrice","isPaid","paidAt","color","isDeleverd","deleverdAt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Container, Form, Button, Row, Col, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userProfile, userUpdateProfile,listMyOrders } from \"../redux\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport AlertShow from \"../Components/AlertShow\";\nimport Loader from \"../Components/Loader\";\nconst ProfileScreen = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, SetConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const navigate = useNavigate();\n  const state = useSelector((state) => state);\n  const { userInfo } = state.userLogin;\n  const { loading, user, error } = state.userDetails;\n  const {\n    loading: loadingOrders,\n    orders,\n    error: errorOrders,\n  } = state.orderListMy;\n  const { success } = state.userUpdateProfile;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!userInfo) {\n      navigate(\"../signin\", { replace: true });\n    } else {\n      if (!user.name) {\n        //First time open the page this condition will be executed\n        dispatch(userProfile());\n        dispatch(listMyOrders())\n      } else {\n        //Second time open the page this condition will be executed\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, user, navigate, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    password !== confirmPassword\n      ? setMessage(\"Password and ConfirmPassword do not match\")\n      : dispatch(userUpdateProfile(name, email, password));\n  };\n  console.log(state.orderListMy)\n  return (\n    <>\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          {loading && <Loader />}\n          {success && <AlertShow variant=\"danger\" message={error} />}\n          {error && <AlertShow variant=\"danger\" message={error} />}\n          {message && <AlertShow variant=\"danger\" message={message} />}\n          <Col md={3}>\n            <h1>Update Information</h1>\n            <Form onSubmit={submitHandler}>\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  value={name}\n                  required\n                  onChange={(e) => {\n                    setName(e.target.value);\n                  }}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={email}\n                  required\n                  onChange={(e) => {\n                    setEmail(e.target.value);\n                  }}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                  required\n                  onChange={(e) => {\n                    setPassword(e.target.value);\n                  }}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"confirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  required\n                  onChange={(e) => {\n                    SetConfirmPassword(e.target.value);\n                  }}\n                ></Form.Control>\n              </Form.Group>\n              <Button className=\"my-3\" type=\"submit\" variant=\"primary\">\n                Update\n              </Button>\n            </Form>\n          </Col>\n          <Col md={9}>\n            <h1>My orders</h1>\n            {loadingOrders ? (\n            <Loader />\n          ) : errorOrders ? (\n            <AlertShow variant=\"danger\" message={errorOrders} />\n          ) : (\n            <Table striped bordered hover responsive className=\"table-sm\">\n              <thead>\n                <tr>\n                  <td>ID</td>\n                  <td>DATE</td>\n                  <td>TOTAL</td>\n                  <td>PAID</td>\n                  <td>DELIVERD</td>\n                  <td></td>\n                </tr>\n              </thead>\n              <tbody>\n                {orders.map((order) => (\n                  <tr key={order._id}>\n                    <td>{order._id}</td>\n                    <td>{order.createdAt.substring(0, 10)}</td>\n                    <td>{order.totalPrice}</td>\n                    <td>\n                      {order.isPaid ? (\n                        order.paidAt.substring(0, 10)\n                      ) : (\n                        <i\n                          className=\"fas fa-times\"\n                          style={{ color: \"red\" }}\n                        ></i>\n                      )}\n                    </td>\n                    <td>\n                      {order.isDeleverd ? (\n                        order.deleverdAt.substring(0, 10)\n                      ) : (\n                        <i\n                          className=\"fas fa-times\"\n                          style={{ color: \"red\" }}\n                        ></i>\n                      )}\n                    </td>\n                    <td>\n                      <LinkContainer to={`/order/${order._id}`}>\n                        <Button variant=\"dark\">Details</Button>\n                      </LinkContainer>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          )}\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default ProfileScreen;\n"]},"metadata":{},"sourceType":"module"}