{"ast":null,"code":"import axios from \"axios\";\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from \"../Constants/cartConstant\";\nexport const addToCart = (id, qty) => {\n  return async (dispatch, getState) => {\n    const {\n      data\n    } = await axios.get(`http://localhost:5000/api/products/${id}`); // console.log(getState()) //it will state value from store's different reducer see yhis\n\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        product: data._id,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        qty\n      }\n    }); // console.log(getState().cart.cartItems)\n\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n  };\n};\nexport const removeFromCart = productId => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: CART_REMOVE_ITEM,\n      payload: productId\n    });\n    console.log(getState().cart);\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n  };\n};\nexport const saveShippingAddress = data => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: CART_SAVE_SHIPPING_ADDRESS,\n      payload: data\n    });\n    localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n  };\n};\nexport const savePaymentMethod = data => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: CART_SAVE_PAYMENT_METHOD,\n      payload: data\n    });\n    localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\n  };\n};","map":{"version":3,"sources":["C:/Users/Dell/Downloads/Ecommerce-app-main/Ecommerce-app-main/frontend/src/redux/Actions/cartAction.js"],"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_PAYMENT_METHOD","CART_SAVE_SHIPPING_ADDRESS","addToCart","id","qty","dispatch","getState","data","get","type","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","productId","console","log","saveShippingAddress","savePaymentMethod"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,EAAyCC,wBAAzC,EAAkEC,0BAAlE,QAAoG,2BAApG;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,GAAL,KAAa;AACpC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,GAAN,CACpB,sCAAqCL,EAAG,EADpB,CAAvB,CADmC,CAInC;;AACAE,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEX,aADC;AAEPY,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAEJ,IAAI,CAACK,GADP;AAEPC,QAAAA,IAAI,EAAEN,IAAI,CAACM,IAFJ;AAGPC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAHL;AAIPC,QAAAA,KAAK,EAAER,IAAI,CAACQ,KAJL;AAKPC,QAAAA,YAAY,EAAET,IAAI,CAACS,YALZ;AAMPZ,QAAAA;AANO;AAFF,KAAD,CAAR,CALmC,CAgBnC;;AACAa,IAAAA,YAAY,CAACC,OAAb,CACE,WADF,EAEEC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAFF;AAID,GArBD;AAsBD,CAvBM;AAyBP,OAAO,MAAMC,cAAc,GAAIC,SAAD,IAAe;AAC3C,SAAO,OAAOnB,QAAP,EAAiBC,QAAjB,KAA8B;AAEnCD,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEV,gBADC;AAEPW,MAAAA,OAAO,EAAEc;AAFF,KAAD,CAAR;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYpB,QAAQ,GAAGe,IAAvB;AACAJ,IAAAA,YAAY,CAACC,OAAb,CACI,WADJ,EAEIC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAFJ;AAID,GAXD;AAYD,CAbM;AAcL,OAAO,MAAMK,mBAAmB,GAAIpB,IAAD,IAAQ;AACzC,SAAO,OAAOF,QAAP,EAAgBC,QAAhB,KAA4B;AACjCD,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAACR,0BAAN;AAAiCS,MAAAA,OAAO,EAACH;AAAzC,KAAD,CAAR;AACAU,IAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAuCC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAvC;AACD,GAHD;AAID,CALM;AAOT,OAAO,MAAMqB,iBAAiB,GAAIrB,IAAD,IAAQ;AACvC,SAAO,OAAOF,QAAP,EAAgBC,QAAhB,KAA2B;AAClCD,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAACT,wBAAN;AAA+BU,MAAAA,OAAO,EAACH;AAAvC,KAAD,CAAR;AACAU,IAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAqCC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAArC;AACC,GAHD;AAID,CALM","sourcesContent":["import axios from \"axios\";\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM,CART_SAVE_PAYMENT_METHOD,CART_SAVE_SHIPPING_ADDRESS } from \"../Constants/cartConstant\";\n\nexport const addToCart = (id, qty) => {\n  return async (dispatch, getState) => {\n    const { data } = await axios.get(\n      `http://localhost:5000/api/products/${id}`\n    );\n    // console.log(getState()) //it will state value from store's different reducer see yhis\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        product: data._id,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        qty,\n      },\n    });\n    // console.log(getState().cart.cartItems)\n    localStorage.setItem(\n      \"cartItems\",\n      JSON.stringify(getState().cart.cartItems)\n    );\n  };\n};\n\nexport const removeFromCart = (productId) => {\n  return async (dispatch, getState) => {\n\n    dispatch({\n      type: CART_REMOVE_ITEM,\n      payload: productId,\n    });\n    console.log(getState().cart)\n    localStorage.setItem(\n        \"cartItems\",\n        JSON.stringify(getState().cart.cartItems)\n      );\n  };\n};\n  export const saveShippingAddress = (data)=>{\n    return async (dispatch,getState) =>{\n      dispatch({type:CART_SAVE_SHIPPING_ADDRESS,payload:data})\n      localStorage.setItem(\"shippingAddress\",JSON.stringify(data))\n    }\n  }\n\nexport const savePaymentMethod = (data)=>{\n  return async (dispatch,getState)=>{\n  dispatch({type:CART_SAVE_PAYMENT_METHOD,payload:data})\n  localStorage.setItem(\"paymentMethod\",JSON.stringify(data))\n  }\n}"]},"metadata":{},"sourceType":"module"}