{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Downloads\\\\Ecommerce-app-main\\\\Ecommerce-app-main\\\\frontend\\\\src\\\\Screen\\\\SignupScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userSignup } from \"../redux\";\nimport AlertShow from \"../Components/AlertShow\";\nimport Loader from \"../Components/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignupScreen = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, SetConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const location = useLocation();\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/signin\";\n  const navigate = useNavigate();\n  const state = useSelector(state => state.userSignup);\n  const {\n    loading,\n    userInfo,\n    error\n  } = state;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect, {\n        replace: true\n      });\n    }\n  }, [navigate, redirect, userInfo]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    password !== confirmPassword ? setMessage(\"Password and ConfirmPassword do not match\") : dispatch(userSignup(name, email, password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-md-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(AlertShow, {\n            variant: \"danger\",\n            message: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 23\n          }, this), message && /*#__PURE__*/_jsxDEV(AlertShow, {\n            variant: \"danger\",\n            message: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: submitHandler,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Name\",\n                value: name,\n                required: true,\n                onChange: e => {\n                  setName(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"Email\",\n                value: email,\n                required: true,\n                onChange: e => {\n                  setEmail(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"password\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Password\",\n                value: password,\n                required: true,\n                onChange: e => {\n                  setPassword(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"confirmPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Confirm Password\",\n                value: confirmPassword,\n                required: true,\n                onChange: e => {\n                  SetConfirmPassword(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"my-3\",\n              type: \"submit\",\n              variant: \"primary\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: [\"Have a Account?\", /*#__PURE__*/_jsxDEV(Link, {\n                to: `/signin`,\n                children: \"Signin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SignupScreen, \"LP1aTGtEVvn1diPAzESN2h03RGg=\", false, function () {\n  return [useLocation, useNavigate, useSelector, useDispatch];\n});\n\n_c = SignupScreen;\nexport default SignupScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupScreen\");","map":{"version":3,"sources":["C:/Users/Dell/Downloads/Ecommerce-app-main/Ecommerce-app-main/frontend/src/Screen/SignupScreen.jsx"],"names":["React","useState","useEffect","Link","useLocation","useNavigate","Container","Form","Button","Row","Col","useDispatch","useSelector","userSignup","AlertShow","Loader","SignupScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","SetConfirmPassword","message","setMessage","location","redirect","search","split","navigate","state","loading","userInfo","error","dispatch","replace","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userSignup } from \"../redux\";\nimport AlertShow from \"../Components/AlertShow\";\nimport Loader from \"../Components/Loader\";\nconst SignupScreen = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, SetConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const location = useLocation();\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/signin\";\n  const navigate = useNavigate();\n  const state = useSelector((state) => state.userSignup);\n  const { loading, userInfo, error } = state;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect, { replace: true });\n    }\n  }, [navigate, redirect, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    password !== confirmPassword\n      ? setMessage(\"Password and ConfirmPassword do not match\")\n      : dispatch(userSignup(name, email, password));\n  };\n  return (\n    <>\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          <Col xs={12} md={6}>\n            <h1>Register</h1>\n            {loading && <Loader />}\n            {error && <AlertShow variant=\"danger\" message={error} />}\n            {message && <AlertShow variant=\"danger\" message={message} />}\n            <Form onSubmit={submitHandler}>\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  value={name}\n                  required\n                  onChange={(e) => {\n                    setName(e.target.value);\n                  }}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={email}\n                  required\n                  onChange={(e) => {\n                    setEmail(e.target.value);\n                  }}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                  required\n                  onChange={(e) => {\n                    setPassword(e.target.value);\n                  }}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"confirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  required\n                  onChange={(e) => {\n                    SetConfirmPassword(e.target.value);\n                  }}\n                ></Form.Control>\n              </Form.Group>\n              <Button className=\"my-3\" type=\"submit\" variant=\"primary\">\n                Register\n              </Button>\n            </Form>\n            <Row>\n              <Col>\n                Have a Account?\n                <Link\n                  to={`/signin`}\n                >\n                  Signin\n                </Link>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default SignupScreen;\n"]},"metadata":{},"sourceType":"module"}